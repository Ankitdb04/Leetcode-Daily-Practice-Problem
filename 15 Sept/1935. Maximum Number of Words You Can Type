Problem Statement:
There is a malfunctioning keyboard where some letter keys do not work. All other keys on the keyboard work properly.
Given a string text of words separated by a single space (no leading or trailing spaces) and a string brokenLetters of 
all distinct letter keys that are broken, return the number of words in text you can fully type using this keyboard.

Solution:
class Solution {
    public int canBeTypedWords(String text, String brokenLetters) {
        String [] words=text.split(" ");//word ko agar agag kiya on the basis of space between them
        Set<Character> broken=new HashSet<>();
        //broken letten ko store kr rhe hai set mai
        for(char ch: brokenLetters.toCharArray()){
            broken.add(ch);
        }
        int count=0;
        //word by word check krengai
        for(String word: words){
            boolean flag=true;
            for(char ch: word.toCharArray()){
                if(broken.contains(ch)){
                    flag=false;
                    break;
                }
            }
            if(flag) count++;
        }
        return count;
    }
}
